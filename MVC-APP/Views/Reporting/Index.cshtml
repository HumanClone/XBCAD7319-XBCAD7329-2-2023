@model MVCAPP.Models.ReportingViewModel
@{
    ViewData["Title"] = "Report";
}
<head>
   <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">

    <script>
    window.onload = function () {
        var reportingData = @Html.Raw(Json.Serialize(Model.TicketStatuses));
        var dataSeries = [];
    
        var colors = ["steelblue", "orange", "green", "red", "purple"]; // Add more colors as needed
    
        reportingData.forEach(function (ticketStatus, index) {
            var dataPoints = ticketStatus.tickets.map(function (ticketData) {
                var dateParts = ticketData.date.split('T')[0].split('-');
                var year = parseInt(dateParts[0]);
                var month = parseInt(dateParts[1]) - 1;
                var day = parseInt(dateParts[2]);
                var date = new Date(year, month, day);
    
                return {
                    x: date,
                    y: ticketData.count
                };
            });
    
            var dataSeriesItem = {
                type: "line",
                name: ticketStatus.name,
                dataPoints: dataPoints,
                color: colors[index % colors.length] // Assign a color based on the index
            };
    
            dataSeries.push(dataSeriesItem);
        });
    
        var maxCount = Math.max.apply(Math, dataSeries.flatMap(function (series) {
            return series.dataPoints.map(function (point) {
                return point.y + 2;
            });
        }));
    
        var chart = new CanvasJS.Chart("chartContainer", {
            animationEnabled: true,
            title: {
                fontFamily: "Montserrat, sans-serif",
                text: "Ticket Count by Date",
                padding: 20
            },
            toolTip: {
                fontFamily: "Montserrat, sans-serif",
                shared: true
            },
            axisX: {
                title: "Current Week",
                labelFormatter: function (e) {
				    return CanvasJS.formatDate( e.value, "DD MMM");
			    },
			    labelAngle: -20,
                titleFontFamily: "Montserrat, sans-serif",
            },
            axisY: {
                title: "Ticket Count",
                maximum: maxCount,
                titleFontFamily: "Montserrat, sans-serif",
            },
            data: dataSeries
        });
    
        chart.render();
    }
</script>
</head>
<body>
    <div class="text-center" style="margin-top: 4rem;">
        <div class="row row-cols-1 row-cols-md-3 g-4 justify-content-center">
            @foreach (var status in Model.StatusCounts)
            {
                <div class="col-md-2 mb-4">
                    <div class="card status-count-card">
                        <div class="card-body d-flex flex-column justify-content-center align-items-center">
                            <h4 class="card-title">@status.Value</h4>
                            <p class="card-text"><strong>@status.Key</strong></p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="chartContainer" style="height: 400px; width: 100%;"></div>
    <script src="https://cdn.canvasjs.com/ga/canvasjs.min.js"></script>

</body>
